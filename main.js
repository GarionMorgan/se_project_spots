(()=>{"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=e=>{document.querySelectorAll(e.formSelector).forEach(o=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach(s=>{s.addEventListener("input",()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)})})})(o,e)})};function a(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}n(e);const s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}editAvatarInfo({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}postCard({link:e,caption:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({link:e,name:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}handleLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e94a018e-c690-4742-811e-7105b58943cf","Content-Type":"application/json"}});s.getAppInfo().then(([e,t])=>{e.forEach(e=>{!function(e,t="append"){const r=N(e);w[t](r)}(e,"prepend")}),h.textContent=t.name,v.textContent=t.about,_.src=t.avatar,u.value=t.name,m.value=t.about}).catch(e=>{console.log(`Error: ${e}`)});const c=document.querySelector(".profile__edit-btn"),l=document.querySelector("#edit-profile-modal"),i=l.querySelector(".modal__close-btn"),d=l.querySelector(".modal__form"),u=l.querySelector("#profile-name-input"),m=l.querySelector("#profile-description-input"),_=document.querySelector(".profile__avatar"),h=document.querySelector(".profile__name"),v=document.querySelector(".profile__description"),p=document.querySelector("#preview-modal"),y=p.querySelector(".modal__image"),b=p.querySelector(".modal__caption"),S=document.querySelector(".profile__add-btn"),f=document.querySelector("#new-post-modal"),q=f.querySelector(".modal__submit-btn"),k=f.querySelector(".modal__close-btn"),E=f.querySelector(".modal__form"),L=f.querySelector("#card-image-input"),C=f.querySelector("#card-description-input"),g=document.querySelector(".profile__avatar-btn"),U=document.querySelector("#edit-avatar-modal"),$=U.querySelector(".modal__submit-btn"),x=U.querySelector(".modal__close-btn"),I=U.querySelector(".modal__form"),A=U.querySelector("#profile-avatar-input"),R=document.querySelector("#delete-card-modal"),B=R.querySelector(".modal__form"),T=R.querySelector(".modal__close-btn"),D=R.querySelector(".modal__cancel-card-btn"),P=document.querySelector("#card-template").content.querySelector(".card"),w=document.querySelector(".cards__list");function N(e){const t=P.cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image");o.src=e.link,o.alt=e.name,r.textContent=e.name;const n=t.querySelector(".card__like-btn");return e.isLiked?n.classList.add("card__like-btn_active"):n.classList.remove("card__like-btn_active"),n.addEventListener("click",()=>M(e._id,n)),t.querySelector(".card__delete-btn").addEventListener("click",()=>{z(t,e._id)}),o.addEventListener("click",()=>{y.src=e.link,y.alt=e.name,b.textContent=e.name,O(p)}),t}const O=e=>{e.classList.add("modal_is-opened"),document.addEventListener("keydown",J),e.addEventListener("click",H)},j=e=>{e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",J),e.removeEventListener("click",H)},J=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");e&&j(e)}},H=e=>{e.target.classList.contains("modal_is-opened")&&j(e.target)};D.addEventListener("click",()=>{const e=document.getElementById("delete-card-modal");j(e)});const z=(e,t)=>{F=e,G=t,O(R)},M=(e,t)=>{const r=t.classList.contains("card__like-btn_active");r?s.handleLike(e,r).then(()=>{t.classList.remove("card__like-btn_active")}).catch(console.error):s.handleLike(e,r).then(()=>{t.classList.add("card__like-btn_active")}).catch(console.error)};let F,G;document.querySelectorAll(".modal__close-btn").forEach(e=>{const t=e.closest(".modal");e.addEventListener("click",()=>j(t))}),c.addEventListener("click",()=>{u.value=h.textContent,m.value=v.textContent,((e,r,n)=>{r.forEach(r=>{t(e,r,n)});const a=e.querySelector(n.submitButtonSelector);o(a,n)})(d,[u,m],e),O(l)}),i.addEventListener("click",()=>{j(l)}),d.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;a(t,!0),s.editUserInfo({name:u.value,about:m.value}).then(e=>{h.textContent=e.name,v.textContent=e.about,j(l)}).catch(console.error).finally(()=>{a(t,!1)})}),S.addEventListener("click",()=>{O(f)}),k.addEventListener("click",()=>{j(f)}),E.addEventListener("submit",t=>{t.preventDefault();const r=t.submitter;a(r,!0),s.postCard({link:L.value,caption:C.value}).then(t=>{const r=N(t);w.prepend(r),E.reset(),o(q,e),j(f)}).catch(console.error).finally(()=>{a(r,!1)})}),g.addEventListener("click",()=>{O(U)}),x.addEventListener("click",()=>{j(U)}),I.addEventListener("submit",t=>{t.preventDefault();const r=t.submitter;a(r,!0),s.editAvatarInfo({avatar:A.value}).then(t=>{console.log(t.avatar),_.src=t.avatar,I.reset(),o($,e),j(U)}).catch(console.error).finally(()=>{a(r,!1)})}),T.addEventListener("click",()=>{j(R)}),B.addEventListener("submit",e=>{e.preventDefault();const t=e.submitter;a(t,!0),s.deleteCard(G).then(()=>{console.log("Card deleted"),F.remove(),j(R)}).catch(console.error).finally(()=>{a(t,!1)})}),n(e)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,